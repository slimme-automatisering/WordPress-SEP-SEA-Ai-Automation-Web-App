version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - //./pipe/docker_engine:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik/config:/etc/traefik/config:ro
      - ./traefik/certificates:/etc/traefik/certificates:ro
    networks:
      - seo_sea_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.seo-sea.local`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.tls=true"

  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: frontend
    restart: unless-stopped
    volumes:
      - ./src/frontend:/app/src/frontend:ro
      - ./public:/app/public:ro
    environment:
      - NODE_ENV=development
      - VITE_API_URL=https://api.seo-sea.local
    networks:
      - seo_sea_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`app.seo-sea.local`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
      - "traefik.http.routers.frontend.tls=true"

  dashboard:
    build:
      context: .
      dockerfile: Dockerfile
      target: dashboard
    restart: unless-stopped
    volumes:
      - ./src/dashboard:/app/src/dashboard:ro
    environment:
      - NODE_ENV=development
      - VITE_API_URL=https://api.seo-sea.local
    networks:
      - seo_sea_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`dashboard.seo-sea.local`)"
      - "traefik.http.services.dashboard.loadbalancer.server.port=3000"
      - "traefik.http.routers.dashboard.tls=true"

  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: api
    restart: unless-stopped
    volumes:
      - ./src/api/src:/app/src:ro
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://mongodb:27017/seo_sea
      - REDIS_URI=redis://redis:6379
    networks:
      - seo_sea_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.seo-sea.local`)"
      - "traefik.http.services.api.loadbalancer.server.port=3000"
      - "traefik.http.routers.api.tls=true"
    depends_on:
      - mongodb
      - redis

  mongodb:
    image: mongo:6
    restart: unless-stopped
    volumes:
      - mongodb_data:/data/db
    networks:
      - seo_sea_network
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-secret}

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - seo_sea_network
    command: redis-server --requirepass ${REDIS_PASSWORD:-secret}

  prometheus:
    image: prom/prometheus:v2.45.0
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - seo_sea_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.seo-sea.local`)"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
      - "traefik.http.routers.prometheus.tls=true"

  grafana:
    image: grafana/grafana:10.0.0
    restart: unless-stopped
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - grafana_data:/var/lib/grafana
    networks:
      - seo_sea_network
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.seo-sea.local`)"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      - "traefik.http.routers.grafana.tls=true"

networks:
  seo_sea_network:
    driver: bridge
    name: seo_sea_network

volumes:
  mongodb_data:
  redis_data:
  prometheus_data:
  grafana_data:
